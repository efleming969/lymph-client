describe("message routing", function () {
    var create = function (routes) {
        return function (state) {
            return null;
        };
    };
    var view = create({
        "app:action1": function (params) { return function (state) { return state; }; },
        "app:action2": function (params) { return function (state) { return state; }; },
        "app:action3:*": function (params) { return function (state) { return state; }; },
        "app:action4": function (params) { return function (state) { return state; }; },
        "app:*": function (params) { return function (state) { return state; }; }
    });
    test("handle unknown routes", function () {
        expect(view({ path: "unknown", data: "bar" })).toEqual(null);
    });
    xtest("handle static routes", function () {
        expect(view({ name: "app:action1", data: "bar" })).toEqual("foobar");
        expect(view({ name: "app:action2", data: "bar" })).toEqual("FOOBAR");
    });
    xtest("handle wildcard routes", function () {
        expect(view({ name: "app:action3", data: "bar" })).toEqual("barfoo");
    });
    xtest("forward partial message to wildcard routes", function () {
        expect(view({ name: "app:action3:sub-action1", data: "" })).toEqual("sub-action1");
    });
    xtest("pass an event object", function () {
        expect(view({ name: "app:action4", data: "", event: "event-object" })).toEqual("event-object");
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlld1JvdXRlclRlc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL1ZpZXdSb3V0ZXJUZXN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLENBQUUsaUJBQWlCLEVBQUU7SUFFekIsSUFBTSxNQUFNLEdBQUcsVUFBVyxNQUFNO1FBQzVCLE1BQU0sQ0FBQyxVQUFXLEtBQUs7WUFDbkIsTUFBTSxDQUFDLElBQUksQ0FBQTtRQUNmLENBQUMsQ0FBQTtJQUNMLENBQUMsQ0FBQTtJQUVELElBQU0sSUFBSSxHQUFHLE1BQU0sQ0FBRTtRQUNqQixhQUFhLEVBQUUsVUFBRSxNQUFNLElBQU0sT0FBQSxVQUFFLEtBQUssSUFBTSxPQUFBLEtBQUssRUFBTCxDQUFLLEVBQWxCLENBQWtCO1FBQy9DLGFBQWEsRUFBRSxVQUFFLE1BQU0sSUFBTSxPQUFBLFVBQUUsS0FBSyxJQUFNLE9BQUEsS0FBSyxFQUFMLENBQUssRUFBbEIsQ0FBa0I7UUFDL0MsZUFBZSxFQUFFLFVBQUUsTUFBTSxJQUFNLE9BQUEsVUFBRSxLQUFLLElBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSyxFQUFsQixDQUFrQjtRQUNqRCxhQUFhLEVBQUUsVUFBRSxNQUFNLElBQU0sT0FBQSxVQUFFLEtBQUssSUFBTSxPQUFBLEtBQUssRUFBTCxDQUFLLEVBQWxCLENBQWtCO1FBQy9DLE9BQU8sRUFBRSxVQUFFLE1BQU0sSUFBTSxPQUFBLFVBQUUsS0FBSyxJQUFNLE9BQUEsS0FBSyxFQUFMLENBQUssRUFBbEIsQ0FBa0I7S0FDNUMsQ0FBRSxDQUFBO0lBRUgsSUFBSSxDQUFFLHVCQUF1QixFQUFFO1FBQzNCLE1BQU0sQ0FBRSxJQUFJLENBQUUsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBRSxDQUFFLENBQUMsT0FBTyxDQUFFLElBQUksQ0FBRSxDQUFBO0lBQ3RFLENBQUMsQ0FBRSxDQUFBO0lBRUgsS0FBSyxDQUFFLHNCQUFzQixFQUFFO1FBQzNCLE1BQU0sQ0FBRSxJQUFJLENBQUUsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBRSxDQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxDQUFBO1FBQzFFLE1BQU0sQ0FBRSxJQUFJLENBQUUsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBRSxDQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxDQUFBO0lBQzlFLENBQUMsQ0FBRSxDQUFBO0lBRUgsS0FBSyxDQUFFLHdCQUF3QixFQUFFO1FBQzdCLE1BQU0sQ0FBRSxJQUFJLENBQUUsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBRSxDQUFFLENBQUMsT0FBTyxDQUFFLFFBQVEsQ0FBRSxDQUFBO0lBQzlFLENBQUMsQ0FBRSxDQUFBO0lBRUgsS0FBSyxDQUFFLDRDQUE0QyxFQUFFO1FBQ2pELE1BQU0sQ0FBRSxJQUFJLENBQUUsRUFBRSxJQUFJLEVBQUUseUJBQXlCLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFFLENBQUUsQ0FBQyxPQUFPLENBQUUsYUFBYSxDQUFFLENBQUE7SUFDNUYsQ0FBQyxDQUFFLENBQUE7SUFFSCxLQUFLLENBQUUsc0JBQXNCLEVBQUU7UUFDM0IsTUFBTSxDQUFFLElBQUksQ0FBRSxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLENBQUUsQ0FBRSxDQUFDLE9BQU8sQ0FBRSxjQUFjLENBQUUsQ0FBQTtJQUN4RyxDQUFDLENBQUUsQ0FBQTtBQUNQLENBQUMsQ0FBRSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZGVzY3JpYmUoIFwibWVzc2FnZSByb3V0aW5nXCIsIGZ1bmN0aW9uICgpIHtcblxuICAgIGNvbnN0IGNyZWF0ZSA9IGZ1bmN0aW9uICggcm91dGVzICkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCBzdGF0ZSApIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCB2aWV3ID0gY3JlYXRlKCB7XG4gICAgICAgIFwiYXBwOmFjdGlvbjFcIjogKCBwYXJhbXMgKSA9PiAoIHN0YXRlICkgPT4gc3RhdGUsXG4gICAgICAgIFwiYXBwOmFjdGlvbjJcIjogKCBwYXJhbXMgKSA9PiAoIHN0YXRlICkgPT4gc3RhdGUsXG4gICAgICAgIFwiYXBwOmFjdGlvbjM6KlwiOiAoIHBhcmFtcyApID0+ICggc3RhdGUgKSA9PiBzdGF0ZSxcbiAgICAgICAgXCJhcHA6YWN0aW9uNFwiOiAoIHBhcmFtcyApID0+ICggc3RhdGUgKSA9PiBzdGF0ZSxcbiAgICAgICAgXCJhcHA6KlwiOiAoIHBhcmFtcyApID0+ICggc3RhdGUgKSA9PiBzdGF0ZVxuICAgIH0gKVxuXG4gICAgdGVzdCggXCJoYW5kbGUgdW5rbm93biByb3V0ZXNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBleHBlY3QoIHZpZXcoIHsgcGF0aDogXCJ1bmtub3duXCIsIGRhdGE6IFwiYmFyXCIgfSApICkudG9FcXVhbCggbnVsbCApXG4gICAgfSApXG5cbiAgICB4dGVzdCggXCJoYW5kbGUgc3RhdGljIHJvdXRlc1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGV4cGVjdCggdmlldyggeyBuYW1lOiBcImFwcDphY3Rpb24xXCIsIGRhdGE6IFwiYmFyXCIgfSApICkudG9FcXVhbCggXCJmb29iYXJcIiApXG4gICAgICAgIGV4cGVjdCggdmlldyggeyBuYW1lOiBcImFwcDphY3Rpb24yXCIsIGRhdGE6IFwiYmFyXCIgfSApICkudG9FcXVhbCggXCJGT09CQVJcIiApXG4gICAgfSApXG5cbiAgICB4dGVzdCggXCJoYW5kbGUgd2lsZGNhcmQgcm91dGVzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZXhwZWN0KCB2aWV3KCB7IG5hbWU6IFwiYXBwOmFjdGlvbjNcIiwgZGF0YTogXCJiYXJcIiB9ICkgKS50b0VxdWFsKCBcImJhcmZvb1wiIClcbiAgICB9IClcblxuICAgIHh0ZXN0KCBcImZvcndhcmQgcGFydGlhbCBtZXNzYWdlIHRvIHdpbGRjYXJkIHJvdXRlc1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGV4cGVjdCggdmlldyggeyBuYW1lOiBcImFwcDphY3Rpb24zOnN1Yi1hY3Rpb24xXCIsIGRhdGE6IFwiXCIgfSApICkudG9FcXVhbCggXCJzdWItYWN0aW9uMVwiIClcbiAgICB9IClcblxuICAgIHh0ZXN0KCBcInBhc3MgYW4gZXZlbnQgb2JqZWN0XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZXhwZWN0KCB2aWV3KCB7IG5hbWU6IFwiYXBwOmFjdGlvbjRcIiwgZGF0YTogXCJcIiwgZXZlbnQ6IFwiZXZlbnQtb2JqZWN0XCIgfSApICkudG9FcXVhbCggXCJldmVudC1vYmplY3RcIiApXG4gICAgfSApXG59IClcbiJdfQ==