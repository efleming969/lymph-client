"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Utils_1 = require("./Utils");
const fetchHeaders = {
    "Content-Type": "application/json",
    "Accept": "application/json"
};
const createFetchOptions = function (method, token, data) {
    const headers = Utils_1.merge(fetchHeaders, token ? { "Authorization": token } : {});
    const body = JSON.stringify(data);
    return { method, headers, body };
};
class default_1 {
    constructor(fetch) {
        this.fetch = fetch;
    }
    post(path, data, auth_token) {
        const options = createFetchOptions("POST", auth_token, data);
        return this.fetch(path, options).then(function (response) {
            return response.json().then(function (data) {
                if (response.status === 400)
                    throw data;
                return data;
            });
        });
    }
    get(path, auth_token) {
        const options = createFetchOptions("GET", auth_token, null);
        return this.fetch(path, options).then(function (response) {
            return response.json().then(function (data) {
                if (response.status === 400)
                    throw data;
                return data;
            });
        });
    }
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSFRUUC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9IVFRQLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUNBQStCO0FBRS9CLE1BQU0sWUFBWSxHQUFHO0lBQ2pCLGNBQWMsRUFBRSxrQkFBa0I7SUFDbEMsUUFBUSxFQUFFLGtCQUFrQjtDQUMvQixDQUFBO0FBRUQsTUFBTSxrQkFBa0IsR0FBRyxVQUFXLE1BQWMsRUFBRSxLQUFhLEVBQUUsSUFBUztJQUMxRSxNQUFNLE9BQU8sR0FBRyxhQUFLLENBQUUsWUFBWSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBRSxDQUFBO0lBQzlFLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUUsSUFBSSxDQUFFLENBQUE7SUFFbkMsTUFBTSxDQUFDLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQTtBQUNwQyxDQUFDLENBQUE7QUFFRDtJQUNJLFlBQXNCLEtBQUs7UUFBTCxVQUFLLEdBQUwsS0FBSyxDQUFBO0lBQzNCLENBQUM7SUFFRCxJQUFJLENBQUcsSUFBWSxFQUFFLElBQVMsRUFBRSxVQUFtQjtRQUMvQyxNQUFNLE9BQU8sR0FBRyxrQkFBa0IsQ0FBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLElBQUksQ0FBRSxDQUFBO1FBRTlELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFFLElBQUksRUFBRSxPQUFPLENBQUUsQ0FBQyxJQUFJLENBQUUsVUFBVyxRQUFRO1lBQ3hELE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFFLFVBQVcsSUFBSTtnQkFDeEMsRUFBRSxDQUFDLENBQUUsUUFBUSxDQUFDLE1BQU0sS0FBSyxHQUFJLENBQUM7b0JBQUMsTUFBTSxJQUFJLENBQUE7Z0JBQ3pDLE1BQU0sQ0FBQyxJQUFJLENBQUE7WUFDZixDQUFDLENBQUUsQ0FBQTtRQUNQLENBQUMsQ0FBRSxDQUFBO0lBQ1AsQ0FBQztJQUVELEdBQUcsQ0FBRyxJQUFZLEVBQUUsVUFBbUI7UUFDbkMsTUFBTSxPQUFPLEdBQUcsa0JBQWtCLENBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUUsQ0FBQTtRQUU3RCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLEVBQUUsT0FBTyxDQUFFLENBQUMsSUFBSSxDQUFFLFVBQVcsUUFBUTtZQUN4RCxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBRSxVQUFXLElBQUk7Z0JBQ3hDLEVBQUUsQ0FBQyxDQUFFLFFBQVEsQ0FBQyxNQUFNLEtBQUssR0FBSSxDQUFDO29CQUFDLE1BQU0sSUFBSSxDQUFBO2dCQUN6QyxNQUFNLENBQUMsSUFBSSxDQUFBO1lBQ2YsQ0FBQyxDQUFFLENBQUE7UUFDUCxDQUFDLENBQUUsQ0FBQTtJQUNQLENBQUM7Q0FDSjtBQXpCRCw0QkF5QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZXJnZSB9IGZyb20gXCIuL1V0aWxzXCJcblxuY29uc3QgZmV0Y2hIZWFkZXJzID0ge1xuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiQWNjZXB0XCI6IFwiYXBwbGljYXRpb24vanNvblwiXG59XG5cbmNvbnN0IGNyZWF0ZUZldGNoT3B0aW9ucyA9IGZ1bmN0aW9uICggbWV0aG9kOiBzdHJpbmcsIHRva2VuOiBzdHJpbmcsIGRhdGE6IGFueSApIHtcbiAgICBjb25zdCBoZWFkZXJzID0gbWVyZ2UoIGZldGNoSGVhZGVycywgdG9rZW4gPyB7IFwiQXV0aG9yaXphdGlvblwiOiB0b2tlbiB9IDoge30gKVxuICAgIGNvbnN0IGJvZHkgPSBKU09OLnN0cmluZ2lmeSggZGF0YSApXG5cbiAgICByZXR1cm4geyBtZXRob2QsIGhlYWRlcnMsIGJvZHkgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gICAgY29uc3RydWN0b3IgKCBwcml2YXRlIGZldGNoICkge1xuICAgIH1cblxuICAgIHBvc3QgKCBwYXRoOiBzdHJpbmcsIGRhdGE6IGFueSwgYXV0aF90b2tlbj86IHN0cmluZyApIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGNyZWF0ZUZldGNoT3B0aW9ucyggXCJQT1NUXCIsIGF1dGhfdG9rZW4sIGRhdGEgKVxuXG4gICAgICAgIHJldHVybiB0aGlzLmZldGNoKCBwYXRoLCBvcHRpb25zICkudGhlbiggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbiggZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2Uuc3RhdHVzID09PSA0MDAgKSB0aHJvdyBkYXRhXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFcbiAgICAgICAgICAgIH0gKVxuICAgICAgICB9IClcbiAgICB9XG5cbiAgICBnZXQgKCBwYXRoOiBzdHJpbmcsIGF1dGhfdG9rZW4/OiBzdHJpbmcgKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSBjcmVhdGVGZXRjaE9wdGlvbnMoIFwiR0VUXCIsIGF1dGhfdG9rZW4sIG51bGwgKVxuXG4gICAgICAgIHJldHVybiB0aGlzLmZldGNoKCBwYXRoLCBvcHRpb25zICkudGhlbiggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbiggZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2Uuc3RhdHVzID09PSA0MDAgKSB0aHJvdyBkYXRhXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFcbiAgICAgICAgICAgIH0gKVxuICAgICAgICB9IClcbiAgICB9XG59XG4iXX0=