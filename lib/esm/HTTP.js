import { merge } from "./Utils";
const fetchHeaders = {
    "Content-Type": "application/json",
    "Accept": "application/json"
};
export const createFetchOptions = function (method, token, data) {
    const headers = merge(fetchHeaders, token ? { "Authorization": token } : {});
    const body = data ? JSON.stringify(data) : null;
    return { method, headers, body };
};
export default class {
    constructor(fetch) {
        this.fetch = fetch;
    }
    post(path, data, auth_token) {
        const options = createFetchOptions("POST", auth_token, data);
        return this.fetch(path, options).then(function (response) {
            return response.json().then(function (data) {
                if (response.status === 400)
                    throw data;
                return data;
            });
        });
    }
    get(path, auth_token) {
        const options = createFetchOptions("GET", auth_token, null);
        return this.fetch(path, options).then(function (response) {
            return response.json().then(function (data) {
                if (response.status === 400)
                    throw data;
                return data;
            });
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSFRUUC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9IVFRQLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUE7QUFFL0IsTUFBTSxZQUFZLEdBQUc7SUFDakIsY0FBYyxFQUFFLGtCQUFrQjtJQUNsQyxRQUFRLEVBQUUsa0JBQWtCO0NBQy9CLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxVQUFXLE1BQWMsRUFBRSxLQUFhLEVBQUUsSUFBUztJQUNqRixNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUUsWUFBWSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBRSxDQUFBO0lBQzlFLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBRSxJQUFJLENBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFBO0lBRWpELE1BQU0sQ0FBQyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUE7QUFDcEMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE9BQU87SUFDVixZQUFzQixLQUFLO1FBQUwsVUFBSyxHQUFMLEtBQUssQ0FBQTtJQUMzQixDQUFDO0lBRUQsSUFBSSxDQUFHLElBQVksRUFBRSxJQUFTLEVBQUUsVUFBbUI7UUFDL0MsTUFBTSxPQUFPLEdBQUcsa0JBQWtCLENBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxJQUFJLENBQUUsQ0FBQTtRQUU5RCxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBRSxJQUFJLEVBQUUsT0FBTyxDQUFFLENBQUMsSUFBSSxDQUFFLFVBQVcsUUFBUTtZQUN4RCxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBRSxVQUFXLElBQUk7Z0JBQ3hDLEVBQUUsQ0FBQyxDQUFFLFFBQVEsQ0FBQyxNQUFNLEtBQUssR0FBSSxDQUFDO29CQUFDLE1BQU0sSUFBSSxDQUFBO2dCQUN6QyxNQUFNLENBQUMsSUFBSSxDQUFBO1lBQ2YsQ0FBQyxDQUFFLENBQUE7UUFDUCxDQUFDLENBQUUsQ0FBQTtJQUNQLENBQUM7SUFFRCxHQUFHLENBQUcsSUFBWSxFQUFFLFVBQW1CO1FBQ25DLE1BQU0sT0FBTyxHQUFHLGtCQUFrQixDQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFFLENBQUE7UUFFN0QsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBRSxDQUFDLElBQUksQ0FBRSxVQUFXLFFBQVE7WUFDeEQsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUUsVUFBVyxJQUFJO2dCQUN4QyxFQUFFLENBQUMsQ0FBRSxRQUFRLENBQUMsTUFBTSxLQUFLLEdBQUksQ0FBQztvQkFBQyxNQUFNLElBQUksQ0FBQTtnQkFDekMsTUFBTSxDQUFDLElBQUksQ0FBQTtZQUNmLENBQUMsQ0FBRSxDQUFBO1FBQ1AsQ0FBQyxDQUFFLENBQUE7SUFDUCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZXJnZSB9IGZyb20gXCIuL1V0aWxzXCJcblxuY29uc3QgZmV0Y2hIZWFkZXJzID0ge1xuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiQWNjZXB0XCI6IFwiYXBwbGljYXRpb24vanNvblwiXG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVGZXRjaE9wdGlvbnMgPSBmdW5jdGlvbiAoIG1ldGhvZDogc3RyaW5nLCB0b2tlbjogc3RyaW5nLCBkYXRhOiBhbnkgKSB7XG4gICAgY29uc3QgaGVhZGVycyA9IG1lcmdlKCBmZXRjaEhlYWRlcnMsIHRva2VuID8geyBcIkF1dGhvcml6YXRpb25cIjogdG9rZW4gfSA6IHt9IClcbiAgICBjb25zdCBib2R5ID0gZGF0YSA/IEpTT04uc3RyaW5naWZ5KCBkYXRhICkgOiBudWxsXG5cbiAgICByZXR1cm4geyBtZXRob2QsIGhlYWRlcnMsIGJvZHkgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gICAgY29uc3RydWN0b3IgKCBwcml2YXRlIGZldGNoICkge1xuICAgIH1cblxuICAgIHBvc3QgKCBwYXRoOiBzdHJpbmcsIGRhdGE6IGFueSwgYXV0aF90b2tlbj86IHN0cmluZyApIHtcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGNyZWF0ZUZldGNoT3B0aW9ucyggXCJQT1NUXCIsIGF1dGhfdG9rZW4sIGRhdGEgKVxuXG4gICAgICAgIHJldHVybiB0aGlzLmZldGNoKCBwYXRoLCBvcHRpb25zICkudGhlbiggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbiggZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2Uuc3RhdHVzID09PSA0MDAgKSB0aHJvdyBkYXRhXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFcbiAgICAgICAgICAgIH0gKVxuICAgICAgICB9IClcbiAgICB9XG5cbiAgICBnZXQgKCBwYXRoOiBzdHJpbmcsIGF1dGhfdG9rZW4/OiBzdHJpbmcgKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSBjcmVhdGVGZXRjaE9wdGlvbnMoIFwiR0VUXCIsIGF1dGhfdG9rZW4sIG51bGwgKVxuXG4gICAgICAgIHJldHVybiB0aGlzLmZldGNoKCBwYXRoLCBvcHRpb25zICkudGhlbiggZnVuY3Rpb24gKCByZXNwb25zZSApIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbiggZnVuY3Rpb24gKCBkYXRhICkge1xuICAgICAgICAgICAgICAgIGlmICggcmVzcG9uc2Uuc3RhdHVzID09PSA0MDAgKSB0aHJvdyBkYXRhXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFcbiAgICAgICAgICAgIH0gKVxuICAgICAgICB9IClcbiAgICB9XG59XG4iXX0=